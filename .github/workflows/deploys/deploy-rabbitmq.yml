name: Deploy RabbitMQ Service

on:
  workflow_call:
    inputs:
      ecs_cluster:
        required: true
        type: string
      ecs_service:
        required: true
        type: string

env:
  ECS_TASK_DEFINITION: .github/workflows/task-definitions/rabbitmq-task-definition.json
  ECR_REPOSITORY: budget-rabbitmq-repo
  IMAGE_URI: ""
  CONTAINER_NAME: budget-rabbitmq

jobs:
  deploy-rabbitmq:
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Build, tag, and push image to Amazon ECR
        id: build-image-rabbitmq
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker pull rabbitmq:latest
          docker tag rabbitmq:latest $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "IMAGE_URI=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_ENV

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def-rabbitmq
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ${{ env.ECS_TASK_DEFINITION }}
          container-name: ${{ env.CONTAINER_NAME }}
          image: ${{ env.IMAGE_URI }}

      - name: Deploy to Amazon ECS
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def-rabbitmq.outputs.task-definition }}
          service: ${{ inputs.ecs_service }}
          cluster: ${{ inputs.ecs_cluster }}
          wait-for-service-stability: true
