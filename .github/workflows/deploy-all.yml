name: Deploy All Services to ECS

on:
  push:
    branches: [ "main" ]

env:
  AWS_REGION: eu-north-1
  ECS_CLUSTER: budget
  ECS_SERVICE_RABBITMQ: budget-rabbitmq
  ECS_SERVICE_SERVER: budget-server
  ECS_SERVICE_CLIENT: budget-client

jobs:
  setup-aws-and-ecr:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

  deploy-services:
    needs: setup-aws-and-ecr
    runs-on: ubuntu-latest
    steps:
      - name: Deploy RabbitMQ Service
        uses: .github/workflows/deploys/deploy-rabbitmq.yml
        with:
          ecs_cluster: ${{ env.ECS_CLUSTER }}
          ecs_service: ${{ env.ECS_SERVICE_RABBITMQ }}

      # - name: Deploy Server Service
      #   uses: .github/workflows/deploys/deploy-server.yml
      #   with:
      #     ecs_cluster: ${{ env.ECS_CLUSTER }}
      #     ecs_service: ${{ env.ECS_SERVICE_SERVER }}
      
      # - name: Deploy Client Service
      #   uses: .github/workflows/deploys/deploy-client.yml
      #   with:
      #     ecs_cluster: ${{ env.ECS_CLUSTER }}
      #     ecs_service: ${{ env.ECS_SERVICE_CLIENT }}

      - name: Wait for RabbitMQ Service Stability
        run: |
          aws ecs wait services-stable --cluster ${{ env.ECS_CLUSTER }} --services ${{ env.ECS_SERVICE_RABBITMQ }}

      # - name: Wait for Server Service Stability
      #   run: |
      #     aws ecs wait services-stable --cluster ${{ env.ECS_CLUSTER }} --services ${{ env.ECS_SERVICE_SERVER }}
      
      # - name: Wait for Client Service Stability
      #   run: |
      #     aws ecs wait services-stable --cluster ${{ env.ECS_CLUSTER }} --services ${{ env.ECS_SERVICE_CLIENT }}
